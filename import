import networkx as nx
import numpy as np
import cmath
import Bio
import Bio.PDB
import Bio.SeqRecord
from sklearn import metrics
from biopandas.pdb import PandasPdb
from prody import parsePDBHeader
from scipy.spatial import distance_matrix
import glob
import pandas as pd
import gudhi as gd
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors

def read_pdb_to_dataframe(pdb_path,model_index: int = 1,parse_header: bool = True):
    atomic_df = PandasPdb().read_pdb('3gst_protein.pdb')
    if parse_header:
        header = parsePDBHeader('3gst_protein.pdb')
    else:
        header = None
    atomic_df = atomic_df.get_model(model_index)
    if len(atomic_df.df["ATOM"]) == 0:
        raise ValueError(f"No model found for index: {model_index}")

    return pd.concat([atomic_df.df["ATOM"], atomic_df.df["HETATM"]]), header

#extract name+coordinates of selected elements in data
def extract_data_proteins(file):
    name_atoms=[]
    coor_atoms=[]
    elements=['C','N','O','S']
    a_array = file['element_symbol'].to_numpy()
    r_array = (file['record_name']=='ATOM').to_numpy()
    x_array,y_array,z_array = file['x_coord'].to_numpy(),file['y_coord'].to_numpy(),file['z_coord'].to_numpy()
    coord = [(float(x),float(y),float(z)) for (x,y,z) in zip(x_array,y_array,z_array)]
    for i,a in enumerate(a_array):
        if a in elements and r_array[i]==True:
            name_atoms.append(a)
            coor_atoms.append(coord[i])
    
    return name_atoms,coor_atoms

---------------------------------------------
import pandas as pd
import matplotlib.pyplot as plt
from biopandas.pdb import PandasPdb

def read_pdb_to_dataframe(pdb_path, model_index=1):
    # Read the PDB file and store the atomic information in a DataFrame
    atomic_df = PandasPdb().read_pdb(pdb_path)
    atomic_df = atomic_df.df["ATOM"].append(atomic_df.df["HETATM"])

    # Check if any models were found
    if len(atomic_df) == 0:
        raise ValueError(f"No model found for index: {model_index}")

    return atomic_df


df = read_pdb_to_dataframe('3pcb_protein.pdb')


plt.plot(df['x_coord'], df['y_coord'])
plt.xlabel('X Coordinate')
plt.ylabel('Y Coordinate')
plt.title('Protein Structure')
plt.show()
